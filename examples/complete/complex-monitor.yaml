# The official Datadog API documentation with available query parameters & alert types:
# https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor

sample-complex-monitor:
  name: "Sample complex monitor"
  type: log alert
  query: |
    formula("query + query1").last("1d") >= 1
  message: |
    {{log.message}}
  escalation_message: ""
  tags:
    ManagedBy: Terraform
  priority: 3
  notify_no_data: false
  notify_audit: true
  require_full_window: true
  enable_logs_sample: false
  force_delete: true
  include_tags: true
  locked: false
  renotify_interval: 60
  timeout_h: 0
  evaluation_delay: 60
  new_host_delay: 300
  new_group_delay: 0
  groupby_simple_monitor: false
  renotify_occurrences: 0
  renotify_statuses: []
  validate: true
  variables:
    - event_query:
        - compute:
            - aggregation: count
              interval: 10000
              metric: aws.ec2.status_check_failed
            - aggregation: count
              interval: 100000
              metric: aws.ec2.status_check_failed
          data_source: logs
          name: query
          group_by:
            - facet: instance_id
              limit: 10
              sort:
                - aggregation: avg
                  metric: aws.ec2.status_check_failed
                  order: desc
          search:
            - query: status:info
        - compute:
            - aggregation: count
              interval: 10000
              metric: aws.ec2.status_check_failed
            - aggregation: count
              interval: 100000
              metric: aws.ec2.status_check_failed
          data_source: logs
          name: query1
          group_by:
            - facet: instance_id
              limit: 10
              sort:
                - aggregation: avg
                  metric: aws.ec2.status_check_failed
                  order: desc
          indexes:
            - test
            - test2
          search:
            - query: test
  scheduling_options:
    - evaluation_window:
        - hour_starts: 0
  no_data_timeframe: 10
  threshold_windows: {}
  thresholds:
    critical: 1
    #warning:
    #unknown:
    #ok:
    #critical_recovery:
    #warning_recovery:
